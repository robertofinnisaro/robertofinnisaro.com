[{"content":"This is a guide on how to install ROS-Noetic It is recommended to use Ubuntu 16.04, 18.04 or 20.04 as the base operating system for ROS to be installed on. In this guide it will run through how to download and install ROS assuming that Ubuntu 20.04 is used.\nOverview Depending on the Ubuntu version that is used will depend on the installion of ROS that can be installed on the operating system. For the likes of Ubuntu 20.04, the ROS version used is ROS-Noetic-Niniemys, this version of ROS will be supported until 2025. Once booted into your operating system open up a termainal\nCtrl + Alt + T ROS Installation 1.0 System Update When the terminal has loaded make sure that the system is up-to-date but running:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade Once the system has upgraded follow up by removing any unnecessary packages from your system:\nsudo apt autoremove 1.1 Setting up ROS Now that your system is setup, it is time to install the necessary packages for ROS. To make sure that your system can accept packages from packages.ros.org the system needs to allow software from this location, to do so run:\nsudo sh -c \u0026#39;echo \u0026#34;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\u0026#34; \u0026gt; /etc/apt/sources.list.d/ros-latest.list\u0026#39; Next, it is time to set up the correct keys for ROS:\ncurl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - 1.2 ROS installation Now that the system is setup and configured for ROS, the installtion process can now be indertaken. To install ROS the following command is used:\nsudo apt install ros-noetic-desktop-full This will install everything for ROS including RQT, RVIZ, 2D/3D simulators\n1.3 ROS Environment To use ROS, this script must be used to tell the terminal where to look for the ROS installation and so that any installed packages can be used. This script must be run in every new terminal session.\nsource /opt/ros/noetic/setup.bash It is possible to source the terminal with the ROS installation on each new terminal session but updating the ~/.bashrc. This can be done automatically but running the following once:\necho \u0026#34;source /opt/ros/noetic/setup.bash\u0026#34; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc To check that this has been appeneded into the ~/.bashrc correctly run the following:\ncat ~/.bashrc Where at the end of the ~/.bashrc will output:\nsource /opt/ros/noetic/setup.bash 1.4 Building Dependencies for Packages To make ROS compatable with some terminal applications and programs, some dependancies need to be installed:\nsudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential 1.4.1 Initialsing rosdep Before ROS tools can be used, rosdep needs to be initalised which allows you to install system dependancies for source. To initalise rosdep as follows:\nsudo apt install python3-rosdep sudo rosdep init rosdep update Environment Setup 2.0 Setting up an Environment Now that ROS has been installed and configured on your system it is now time to set up an environment where you will be able to do development. To make packages for ROS they need to be initialised inside of a workspace which can be created by:\nmkdir -p ~/catkin_ws/src 2.1 Building the Environment Once the directory has been created move to the directory and then build the folder. This will be used anytime you make dependancy changes to your packages located in this workspace or when you create new packages.\ncd catkin_ws \u0026amp;\u0026amp; catkin_make 2.2 Sourcing the Environment Now that the workspace has been built, in order for the terminal and ROS to see the packages that will be created inside of this workspace; the workspace needs to be sourced back to the current terminal session. To do this manually for each session:\nsource ~/catkin_ws/devel/setup.bash This will need to be run for every new terminal session. This process can be made automatic but appending this into your ~/.bashrc so that the workspace will be initalised for every new terminal session automatically.\necho \u0026#34;source ~/catkin_ws/devel/setup.bash\u0026#34; \u0026gt;\u0026gt; ~/.bashrc This command only needs to be run. To check that this has been appeneded into the ~/.bashrc correctly run the following:\ncat ~/.bashrc Where at the end of the ~/.bashrc will output:\nsource ~/catkin_ws/devel/setup.bash ","permalink":"https://robertofinnisaro.com/posts/ros-install/","summary":"This is a guide on how to install ROS-Noetic It is recommended to use Ubuntu 16.04, 18.04 or 20.04 as the base operating system for ROS to be installed on. In this guide it will run through how to download and install ROS assuming that Ubuntu 20.04 is used.\nOverview Depending on the Ubuntu version that is used will depend on the installion of ROS that can be installed on the operating system.","title":"ROS Installation"}]